<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAEAAAAAAAAAEgAAAFwAAACkAAAA1gAA
        APEAAAD9AAAA/QAAAPEAAADWAAAApAAAAFwAAAASAAAAAAAAAAEAAAADAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAMAAAAAAAAAHQAAAI8AAADqAAAA/wAA
        AP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAAAOkAAACPAAAAHQAAAAAAAAADAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAABAAAAAQAAAHUAAAD1AAAA/wAA
        AP4AAAD9AAAA/AAAAP4AAAD+AAAA/wAAAP8AAAD+AAAA/QAAAPwAAAD9AAAA/gAAAP8AAAD1AAAAdAAA
        AAEAAAABAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAABAAAAC4AAAA/wAA
        APwAAAD7AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA+wAA
        APwAAAD/AAAAuAAAABAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAWAAAA0AAA
        AP8AAAD6AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/gAAAPoAAAD/AAAA0AAAABYAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAEAAAAAAAAACQAA
        AMcAAAD/AAAA+gAAAP8DAwP/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wIC
        Av8CAgL/AwMD/wAAAP8AAAD/AAAA/wAAAPoAAAD/AAAAxwAAAAkAAAAAAAAAAQAAAAAAAAAAAAAAAwAA
        AAAAAACbAAAA/wAAAPoAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPoAAAD/AAAAmwAAAAAAAAADAAAAAAAA
        AAMAAAAAAAAATQAAAP8AAAD8AAAA/wEBAf8AAAD/gYGB/8rKyv/AwMD/wsLC/8LCwv/CwsL/wsLC/8LC
        wv/CwsL/wsLC/8LCwv/AwMD/ycnJ/4+Pj/8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPwAAAD/AAAATAAA
        AAAAAAADAAAAAAAAAAIAAADNAAAA/wAAAP0BAQH/AAAA/xEREf/d3d3/YGBg/0pKSv9QUFD/T09P/09P
        T/9PT0//T09P/09PT/9PT0//T09P/01NTf9UVFT/39/f/yEhIf8AAAD/AgIC/wAAAP8AAAD/AAAA/QAA
        AP8AAADMAAAAAgAAAAAAAAAAAAAATgAAAP8AAAD8AAAA/wEBAf8AAAD/ExMT/9TU1P8VFRX/AAAA/wEB
        Af8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8BAQH/AAAA/wYGBv/S0tL/JCQk/wAAAP8CAgL/AAAA/wAA
        AP8AAAD/AAAA/AAAAP8AAABOAAAAAAAAAAAAAACoAAAA/wAAAPwAAAD/AQEB/wAAAP8TExP/1dXV/xkZ
        Gf8AAAD/BAQE/wMDA/8DAwP/AwMD/wMDA/8DAwP/AwMD/wMDA/8CAgL/CwsL/9PT0/8kJCT/AAAA/wIC
        Av8AAAD/AAAA/wAAAP8AAAD8AAAA/wAAAKgAAAAAAAAAEgAAAOUAAAD/AAAA/gAAAP8BAQH/AAAA/wQE
        BP/V1dX/Ly8v/wAAAP8GBgb/AQEB/wAAAP8AAAD/AAAA/wAAAP8BAQH/BQUF/wAAAP8cHBz/2dnZ/xIS
        Ev8AAAD/AQEB/wAAAP8AAAD/AAAA/wAAAP4AAAD/AAAA5AAAABIAAAA/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8DAwP/AAAA/39/f//ExMT/AQEB/wAAAP8BAQH/AQEB/wMDA/8DAwP/AQEB/wAAAP8AAAD/AAAA/7Oz
        s/+VlZX/AAAA/wMDA/8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAPwAAAGgAAAD/AAAA/QAA
        AP8AAAD/AAAA/wAAAP8BAQH/AAAA/5WVlf/a2tr/XV1d/xEREf8AAAD/AAAA/wEBAf8AAAD/Dg4O/1RU
        VP/S0tL/pqam/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/QAAAP8AAABnAAAAggAA
        AP8AAAD8AAAA/wAAAP8AAAD/AAAA/wAAAP8DAwP/AAAA/0RERP+6urr/19fX/8nJyf+7u7v/urq6/8fH
        x//W1tb/wMDA/1BQUP8AAAD/AgIC/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD8AAAA/wAA
        AIEAAACLAAAA/wAAAPwAAAD/AAAA/wAAAP8AAAD/AAAA/wEBAf8DAwP/AAAA/wAAAP8UFBT/RERE/1pa
        Wv9bW1v/SEhI/xgYGP8AAAD/AAAA/wMDA/8BAQH/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        APwAAAD/AAAAigAAAIIAAAD/AAAA/AAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8DAwP/AwMD/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wMDA/8DAwP/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/AAAAP8AAACCAAAAaQAAAP8AAAD8AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AwMD/4GBgf/U1NT/1dXV/46Ojv8ICAj/AAAA/wEBAf8AAAD/AAAA/wEBAf8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD8AAAA/wAAAGgAAABAAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AgIC/wAAAP+lpaX/v7+//zY2Nv8yMjL/sbGx/7e3t/8AAAD/AQEB/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAQAAAABMAAADmAAAA/wAAAP4AAAD/AAAA/wAA
        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
        AARQAAAKqAAAFdAAAAvpAACX9EACL/koFJ8=
</value>
  </data>
</root>